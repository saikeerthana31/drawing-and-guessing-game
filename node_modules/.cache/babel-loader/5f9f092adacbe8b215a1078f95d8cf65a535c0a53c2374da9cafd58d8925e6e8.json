{"ast":null,"code":"var _jsxFileName = \"/Users/lokeshbudda/Documents/drawing-guessing-game/src/components/DrawingApp.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://192.0.0.2:12345\"); // Use your server's IP\n\nconst DrawingApp = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [strokeColor, setStrokeColor] = useState(\"#000000\");\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = strokeColor;\n    ctx.lineCap = \"round\";\n\n    // Fill the canvas with a white background\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n    let isDrawing = false;\n    const getCoordinates = e => {\n      const rect = canvas.getBoundingClientRect();\n      return {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top\n      };\n    };\n    const startDrawing = e => {\n      isDrawing = true;\n      ctx.beginPath();\n      const {\n        x,\n        y\n      } = getCoordinates(e);\n      ctx.moveTo(x, y);\n      socket.emit(\"drawing\", {\n        x,\n        y,\n        lineWidth,\n        strokeColor\n      });\n    };\n    const draw = e => {\n      if (!isDrawing) return;\n      const {\n        x,\n        y\n      } = getCoordinates(e);\n      ctx.lineTo(x, y);\n      ctx.stroke();\n      socket.emit(\"drawing\", {\n        x,\n        y,\n        lineWidth,\n        strokeColor\n      });\n    };\n    const stopDrawing = () => {\n      isDrawing = false;\n      ctx.closePath();\n    };\n    canvas.addEventListener(\"mousedown\", startDrawing);\n    canvas.addEventListener(\"mousemove\", draw);\n    canvas.addEventListener(\"mouseup\", stopDrawing);\n    canvas.addEventListener(\"mouseleave\", stopDrawing);\n\n    // Handle drawing events from other clients\n    socket.on(\"drawing\", ({\n      x,\n      y,\n      lineWidth,\n      strokeColor\n    }) => {\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = strokeColor;\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    });\n\n    // Handle clear event\n    socket.on(\"clear\", () => {\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    });\n    return () => {\n      canvas.removeEventListener(\"mousedown\", startDrawing);\n      canvas.removeEventListener(\"mousemove\", draw);\n      canvas.removeEventListener(\"mouseup\", stopDrawing);\n      canvas.removeEventListener(\"mouseleave\", stopDrawing);\n      socket.off(\"drawing\");\n      socket.off(\"clear\");\n    };\n  }, [lineWidth, strokeColor]);\n  const clearCanvas = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(0, 0, 800, 600);\n    socket.emit(\"clear\"); // Emit clear event to clear all clients' canvases\n  };\n  const randomWord = \"Example\"; // Replace with your logic for a random word\n  const chatMessages = [\"Hello!\", \"How are you?\", \"Let's draw!\"]; // Placeholder for chat messages\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawing-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"toolbar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Draw.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"stroke\",\n          children: \"Stroke\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"stroke\",\n          type: \"color\",\n          value: strokeColor,\n          onChange: e => setStrokeColor(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"lineWidth\",\n          children: \"Line Width\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"lineWidth\",\n          type: \"number\",\n          value: lineWidth,\n          onChange: e => setLineWidth(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearCanvas,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drawing-board\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          id: \"drawing-board\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar word\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Random Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: randomWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingApp, \"m4UQJxVo7cBLR1XFBpaskJQ8esc=\");\n_c = DrawingApp;\nvar _c;\n$RefreshReg$(_c, \"DrawingApp\");","map":{"version":3,"names":["React","useRef","useState","useEffect","io","jsxDEV","_jsxDEV","socket","DrawingApp","_s","canvasRef","lineWidth","setLineWidth","strokeColor","setStrokeColor","canvas","current","width","height","ctx","getContext","strokeStyle","lineCap","fillStyle","fillRect","isDrawing","getCoordinates","e","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","startDrawing","beginPath","moveTo","emit","draw","lineTo","stroke","stopDrawing","closePath","addEventListener","on","removeEventListener","off","clearCanvas","randomWord","chatMessages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","id","htmlFor","type","value","onChange","target","Number","onClick","ref","_c","$RefreshReg$"],"sources":["/Users/lokeshbudda/Documents/drawing-guessing-game/src/components/DrawingApp.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://192.0.0.2:12345\"); // Use your server's IP\n\nconst DrawingApp = () => {\n  const canvasRef = useRef(null);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [strokeColor, setStrokeColor] = useState(\"#000000\");\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = strokeColor;\n    ctx.lineCap = \"round\";\n\n    // Fill the canvas with a white background\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    let isDrawing = false;\n\n    const getCoordinates = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      return {\n        x: e.clientX - rect.left,\n        y: e.clientY - rect.top,\n      };\n    };\n\n    const startDrawing = (e) => {\n      isDrawing = true;\n      ctx.beginPath();\n      const { x, y } = getCoordinates(e);\n      ctx.moveTo(x, y);\n      socket.emit(\"drawing\", { x, y, lineWidth, strokeColor });\n    };\n\n    const draw = (e) => {\n      if (!isDrawing) return;\n      const { x, y } = getCoordinates(e);\n      ctx.lineTo(x, y);\n      ctx.stroke();\n      socket.emit(\"drawing\", { x, y, lineWidth, strokeColor });\n    };\n\n    const stopDrawing = () => {\n      isDrawing = false;\n      ctx.closePath();\n    };\n\n    canvas.addEventListener(\"mousedown\", startDrawing);\n    canvas.addEventListener(\"mousemove\", draw);\n    canvas.addEventListener(\"mouseup\", stopDrawing);\n    canvas.addEventListener(\"mouseleave\", stopDrawing);\n\n    // Handle drawing events from other clients\n    socket.on(\"drawing\", ({ x, y, lineWidth, strokeColor }) => {\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = strokeColor;\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    });\n\n    // Handle clear event\n    socket.on(\"clear\", () => {\n      ctx.fillStyle = \"#FFFFFF\";\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    });\n\n    return () => {\n      canvas.removeEventListener(\"mousedown\", startDrawing);\n      canvas.removeEventListener(\"mousemove\", draw);\n      canvas.removeEventListener(\"mouseup\", stopDrawing);\n      canvas.removeEventListener(\"mouseleave\", stopDrawing);\n      socket.off(\"drawing\");\n      socket.off(\"clear\");\n    };\n  }, [lineWidth, strokeColor]);\n\n  const clearCanvas = () => {\n    const ctx = canvasRef.current.getContext(\"2d\");\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(0, 0, 800, 600);\n    socket.emit(\"clear\"); // Emit clear event to clear all clients' canvases\n  };\n  const randomWord = \"Example\"; // Replace with your logic for a random word\n  const chatMessages = [\"Hello!\", \"How are you?\", \"Let's draw!\"]; // Placeholder for chat messages\n\n  return (\n    <section className=\"container\">\n      <div className=\"sidebar chat\">\n        <h2>Chat</h2>\n        <div className=\"chat-messages\">\n          {chatMessages.map((msg, index) => (\n            <div key={index} className=\"chat-message\">{msg}</div>\n          ))}\n        </div>\n      </div>\n      <div className=\"drawing-area\">\n        <div id=\"toolbar\">\n          <h1>Draw.</h1>\n          <label htmlFor=\"stroke\">Stroke</label>\n          <input\n            id=\"stroke\"\n            type=\"color\"\n            value={strokeColor}\n            onChange={(e) => setStrokeColor(e.target.value)}\n          />\n          <label htmlFor=\"lineWidth\">Line Width</label>\n          <input\n            id=\"lineWidth\"\n            type=\"number\"\n            value={lineWidth}\n            onChange={(e) => setLineWidth(Number(e.target.value))}\n          />\n          <button onClick={clearCanvas}>\n            Clear\n          </button>\n        </div>\n        <div className=\"drawing-board\">\n          <canvas ref={canvasRef} id=\"drawing-board\"></canvas>\n        </div>\n      </div>\n      <div className=\"sidebar word\">\n        <h2>Random Word</h2>\n        <p>{randomWord}</p>\n      </div>\n    </section>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}