{"ast":null,"code":"var _jsxFileName = \"/Users/lokeshbudda/Desktop/drawing-guessing-game/src/components/GuesserGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://192.0.0.2:12345\"); // Use your server's IP\n\nconst GuesserGame = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [guess, setGuess] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [leaderboard, setLeaderboard] = useState({}); // Change to an object for easier access\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Fill the canvas with a white background\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Listen for drawing events\n    socket.on(\"drawing\", ({\n      x,\n      y,\n      lineWidth,\n      strokeColor\n    }) => {\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = strokeColor;\n      ctx.lineCap = \"round\";\n      ctx.lineTo(x, y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    });\n\n    // Listen for clear events\n    socket.on(\"clear\", () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"#FFFFFF\"; // Refill with white background\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    });\n\n    // Update leaderboard\n    socket.on(\"updateLeaderboard\", data => {\n      // Update event name\n      setLeaderboard(data); // Set the leaderboard directly\n    });\n    return () => {\n      socket.off(\"drawing\");\n      socket.off(\"clear\");\n      socket.off(\"updateLeaderboard\"); // Update event name\n    };\n  }, []);\n  const submitGuess = () => {\n    if (guess) {\n      socket.emit(\"submitGuess\", guess); // Ensure this matches server event name\n      setGuess(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Guesser Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"guess-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: guess,\n        onChange: e => setGuess(e.target.value),\n        placeholder: \"Type your guess...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitGuess,\n        children: \"Submit Guess\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawing-board\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        id: \"drawing-board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Leaderboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(leaderboard).map(([userId, points]) =>\n        /*#__PURE__*/\n        // Adjust to render object\n        _jsxDEV(\"li\", {\n          children: [userId, \": \", points, \" points\"]\n        }, userId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(GuesserGame, \"bMAhWR+VbrOPhf1Y5F3mjvfbcbE=\");\n_c = GuesserGame;\nexport default GuesserGame;\nvar _c;\n$RefreshReg$(_c, \"GuesserGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","GuesserGame","_s","canvasRef","guess","setGuess","chat","setChat","leaderboard","setLeaderboard","canvas","current","width","height","ctx","getContext","fillStyle","fillRect","on","x","y","lineWidth","strokeColor","strokeStyle","lineCap","lineTo","stroke","beginPath","moveTo","clearRect","data","off","submitGuess","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","ref","id","Object","entries","map","userId","points","_c","$RefreshReg$"],"sources":["/Users/lokeshbudda/Desktop/drawing-guessing-game/src/components/GuesserGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\n\nconst socket = io(\"http://192.0.0.2:12345\"); // Use your server's IP\n\nconst GuesserGame = () => {\n  const canvasRef = useRef(null);\n  const [guess, setGuess] = useState(\"\");\n  const [chat, setChat] = useState([]);\n  const [leaderboard, setLeaderboard] = useState({}); // Change to an object for easier access\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext(\"2d\");\n\n    // Fill the canvas with a white background\n    ctx.fillStyle = \"#FFFFFF\";\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Listen for drawing events\n    socket.on(\"drawing\", ({ x, y, lineWidth, strokeColor }) => {\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = strokeColor;\n      ctx.lineCap = \"round\";\n      ctx.lineTo(x, y);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(x, y);\n    });\n\n    // Listen for clear events\n    socket.on(\"clear\", () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      ctx.fillStyle = \"#FFFFFF\"; // Refill with white background\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n    });\n\n    // Update leaderboard\n    socket.on(\"updateLeaderboard\", (data) => { // Update event name\n      setLeaderboard(data); // Set the leaderboard directly\n    });\n\n    return () => {\n      socket.off(\"drawing\");\n      socket.off(\"clear\");\n      socket.off(\"updateLeaderboard\"); // Update event name\n    };\n  }, []);\n\n  const submitGuess = () => {\n    if (guess) {\n      socket.emit(\"submitGuess\", guess); // Ensure this matches server event name\n      setGuess(\"\");\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Guesser Game</h1>\n      <div className=\"guess-section\">\n        <input\n          type=\"text\"\n          value={guess}\n          onChange={(e) => setGuess(e.target.value)}\n          placeholder=\"Type your guess...\"\n        />\n        <button onClick={submitGuess}>Submit Guess</button>\n      </div>\n      <div className=\"drawing-board\">\n        <canvas ref={canvasRef} id=\"drawing-board\"></canvas>\n      </div>\n      <div className=\"leaderboard\">\n        <h2>Leaderboard</h2>\n        <ul>\n          {Object.entries(leaderboard).map(([userId, points]) => ( // Adjust to render object\n            <li key={userId}>\n              {userId}: {points} points\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default GuesserGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}