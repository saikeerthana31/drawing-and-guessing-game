{"ast":null,"code":"var _jsxFileName = \"/Users/lokeshbudda/Documents/drawing-guessing-game/src/components/DrawingApp.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingApp = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [strokeColor, setStrokeColor] = useState(\"#000000\");\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = strokeColor;\n    ctx.lineCap = \"round\";\n    let isDrawing = false;\n    const startDrawing = e => {\n      isDrawing = true;\n      ctx.beginPath();\n      ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    };\n    const draw = e => {\n      if (!isDrawing) return;\n      ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.stroke();\n    };\n    const stopDrawing = () => {\n      isDrawing = false;\n      ctx.closePath();\n    };\n    canvas.addEventListener(\"mousedown\", startDrawing);\n    canvas.addEventListener(\"mousemove\", draw);\n    canvas.addEventListener(\"mouseup\", stopDrawing);\n    canvas.addEventListener(\"mouseleave\", stopDrawing);\n    return () => {\n      canvas.removeEventListener(\"mousedown\", startDrawing);\n      canvas.removeEventListener(\"mousemove\", draw);\n      canvas.removeEventListener(\"mouseup\", stopDrawing);\n      canvas.removeEventListener(\"mouseleave\", stopDrawing);\n    };\n  }, [lineWidth, strokeColor]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"toolbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Draw.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"stroke\",\n        children: \"Stroke\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"stroke\",\n        type: \"color\",\n        value: strokeColor,\n        onChange: e => setStrokeColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lineWidth\",\n        children: \"Line Width\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"lineWidth\",\n        type: \"number\",\n        value: lineWidth,\n        onChange: e => setLineWidth(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => canvasRef.current.getContext(\"2d\").clearRect(0, 0, 800, 600),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drawing-board\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        id: \"drawing-board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingApp, \"m4UQJxVo7cBLR1XFBpaskJQ8esc=\");\n_c = DrawingApp;\nexport default DrawingApp;\nvar _c;\n$RefreshReg$(_c, \"DrawingApp\");","map":{"version":3,"names":["React","useRef","useState","useEffect","jsxDEV","_jsxDEV","DrawingApp","_s","canvasRef","lineWidth","setLineWidth","strokeColor","setStrokeColor","canvas","current","width","height","ctx","getContext","strokeStyle","lineCap","isDrawing","startDrawing","e","beginPath","moveTo","nativeEvent","offsetX","offsetY","draw","lineTo","stroke","stopDrawing","closePath","addEventListener","removeEventListener","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","target","onClick","clearRect","ref","_c","$RefreshReg$"],"sources":["/Users/lokeshbudda/Documents/drawing-guessing-game/src/components/DrawingApp.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\n\nconst DrawingApp = () => {\n  const canvasRef = useRef(null);\n  const [lineWidth, setLineWidth] = useState(5);\n  const [strokeColor, setStrokeColor] = useState(\"#000000\");\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    canvas.width = 800;\n    canvas.height = 600;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = strokeColor;\n    ctx.lineCap = \"round\";\n\n    let isDrawing = false;\n\n    const startDrawing = (e) => {\n      isDrawing = true;\n      ctx.beginPath();\n      ctx.moveTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n    };\n\n    const draw = (e) => {\n      if (!isDrawing) return;\n      ctx.lineTo(e.nativeEvent.offsetX, e.nativeEvent.offsetY);\n      ctx.stroke();\n    };\n\n    const stopDrawing = () => {\n      isDrawing = false;\n      ctx.closePath();\n    };\n\n    canvas.addEventListener(\"mousedown\", startDrawing);\n    canvas.addEventListener(\"mousemove\", draw);\n    canvas.addEventListener(\"mouseup\", stopDrawing);\n    canvas.addEventListener(\"mouseleave\", stopDrawing);\n\n    return () => {\n      canvas.removeEventListener(\"mousedown\", startDrawing);\n      canvas.removeEventListener(\"mousemove\", draw);\n      canvas.removeEventListener(\"mouseup\", stopDrawing);\n      canvas.removeEventListener(\"mouseleave\", stopDrawing);\n    };\n  }, [lineWidth, strokeColor]);\n\n  return (\n    <section className=\"container\">\n      <div id=\"toolbar\">\n        <h1>Draw.</h1>\n        <label htmlFor=\"stroke\">Stroke</label>\n        <input\n          id=\"stroke\"\n          type=\"color\"\n          value={strokeColor}\n          onChange={(e) => setStrokeColor(e.target.value)}\n        />\n        <label htmlFor=\"lineWidth\">Line Width</label>\n        <input\n          id=\"lineWidth\"\n          type=\"number\"\n          value={lineWidth}\n          onChange={(e) => setLineWidth(e.target.value)}\n        />\n        <button onClick={() => canvasRef.current.getContext(\"2d\").clearRect(0, 0, 800, 600)}>\n          Clear\n        </button>\n      </div>\n      <div className=\"drawing-board\">\n        <canvas ref={canvasRef} id=\"drawing-board\"></canvas>\n      </div>\n    </section>\n  );\n};\n\nexport default DrawingApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}